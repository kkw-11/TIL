http 200,300,400,500별 상태 설명

nginx사용 이유에 대해 자세하게 설명

본인에게 유리한 주제로 2,3개 주제 미리 

전제조건에 따라 왜 이러한 기술을 사용했는지 생각하면서 

근거 이전 코드 효율 개선 사항 등

내가 어필할 수 있는 부분이 코드라면 이전코드와 바뀐코드를 비교해서(구색맞추기보다는 진짜 사용 이유를 생각하면서 )
ex) 편의성보다는 DB스키마하고 코드와 불일치해소 등, sqlalchemy 썼을때는 장애가 발생,
(사용자요청이 계속 유입대고 있으면 파이썬은 스키마체인지가 안되는 장애  )

기술을 선택할 때 트렌드보다 나의 논리 기준을 가지고 선택하면 좋겠다.


이력서 피드백
: 성능 운영체제, 로우레벨에 관심이 있다면 그 부분에 대한 설명, 어떤 개발성향이 이력서에도 녹아 있었으면 좋겠음(이력서, 깃을 직접 접속해야 알 수 있음)
: 현재 이력서 포트폴리오는 웹개발이 주였음
: 성능 개선에 관심이 있다면 성능개선을 한 사항에 대한 부분을 알 수 있는 부분이 있었으면 좋겠음
: AI분야 개발이 아니라 시스템 개발에 관심이 있다면 그부분을 어필할 수 있는 이력서가 되었으면 좋겠음

와탭랩스
자바기반 개발 백엔드 스프링 기반
스프링데이터 JPA, 유레카 msa 구조로 되어 있고,
데이터베이스는 account meta data로만 RDBMS로 쓰고 있음
file DB에서 끌어다가 쓰고 있음

나의 업을 하기 위해서 수집한 데이터량에 대한 관점

내가 언급하고 싶은거 잘하는거 위주로 포트폴리오 구성하기

성능향상이 관심있으면 그거랑 관련해서 포트폴리오 구성하기


데이터 테이블 설계 - usecase 분석 - 모델링 - DB 스키마

테이블 설계 pk,fk 이슈없었는지??

1대다로 테이블 분리 설계이유 중복데이터

생산성향상때문에 먼저 테이블을 하나로 설계했는데, 추후에 분리 계획
restful api 
	- get은 전달할 수 있는 데이터양
http 클라이언트 코드(post man 사용해보세요)
axios쓰는 이유, 장단점
was,web 구분 이유, nginx 웹서버탄생 이유 진짜 왜 있어야 되는지
 클라이언트,브라우저, 서버, 캐시, 아키텍처 단계별로 어떻게 다른지 

자바 하드하게, 어노테이션 설정 등
로우코드가 되면서 내부 의미 아는지 어떤 의미를 갖고 있는지 아는지

파이썬 에이전트 개발자, 구루 쿠버네티스 모니터링, 
커널, java역량

자바개발- 내가 언급한 것들에 왜?

url 설계원칙, 동기, 비동기, 로깅, 메모리 관리, 아파치커먼즈 라이브러리

자바 서블릿 apache maven 이란,
di IoC는 무엇인지 apache maven 이란, gradle
스프링
url 매핑
클라이언트가 요청한 url에 따라 
왜json으로 반환되는건지

CORS
AOP
ORM JAP/ Entity/ Relation

스프링 다큐먼트 읽기

